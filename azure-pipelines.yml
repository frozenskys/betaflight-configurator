# Builds Betaflight Configurator on Windows, Linux and OSX platforms.
#
# After building, artifacts are released to a seperate repository.
#
# Azure Pipelines requires tasks to be installed:
# - File content to variable: https://marketplace.visualstudio.com/items?itemName=maikvandergaag.maikvandergaag-file-to-variable
# - GitHub Tool: https://marketplace.visualstudio.com/items?itemName=marcelo-formentao.github-tools
#
# You'll also need to setup the follwing pipeline variables: 
#     "releaseNotes" - This is used to add the release notes in the windows job so they can be published as part of the github release
#     "endpoint" - The name of the github endpoint setup in AzDo
#     "owner" - The owner of the repository to release to
#     "repoName" - The name of the repository to release to

name: $(Date:yyyyMMdd).$(BuildID)
trigger:
- master

stages:
- stage: Build
  jobs:

  - job: 'Windows'
    pool:
      vmImage: 'vs2017-win2016'

    steps:
    - task: UseNode@1
      inputs:
        version: '10.16.3'
      displayName: 'Install Node.js 10.16.3'
    - script: yarn install
      displayName: 'Run yarn install'
    - script: yarn test
      displayName: 'Run yarn test'
    - script: yarn gulp release --win32
      displayName: 'Run yarn gulp release for win32'
    - powershell: Set-Content -Path '$(System.DefaultWorkingDirectory)/release/log.txt' -Value $env:BUILD_SOURCEVERSIONMESSAGE
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Windows release'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/release'
        artifact: 'betaflight-configurator-windows'

  - job: 'Linux'
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - task: UseNode@1
      inputs:
        version: '10.16.3'
      displayName: 'Install Node.js 10.16.3'
    - script: yarn install
      displayName: 'Run yarn install'
    - script: yarn  test
      displayName: 'Run yarn test'
    - script: yarn gulp release --linux32
      displayName: 'Run yarn gulp release for linux32'
    - script: yarn gulp release --chromeos
      displayName: 'Run gulp release for chromeos'
    - script: cd $(System.DefaultWorkingDirectory)/release; find -mindepth 1 -maxdepth 1 -type d -exec rm -r {} \;
      displayName: 'Clean release folders'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Linux release'
      inputs: 
        artifactName: betaflight-configurator-linux
        targetPath: '$(System.DefaultWorkingDirectory)/release'