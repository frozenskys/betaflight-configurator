# Builds Betaflight Configurator on Windows, Linux and OSX platforms.
#
# After building, artifacts are released to a seperate repository.
#
# Requires Azure Pipelines added to Github repositories:
# https://azure.microsoft.com/services/devops/pipelines/
#
# Azure Pipelines requires tasks to be installed:
# - Github Release: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release
# - File content to variable: https://marketplace.visualstudio.com/items?itemName=maikvandergaag.maikvandergaag-file-to-variable

trigger:
- master

stages:
- stage: Build
  jobs:

  - job: 'Windows'
    pool:
      vmImage: 'vs2017-win2016'
    steps:

    - task: NodeTool@0
      inputs:
        versionSpec: '10.16.3'    
      displayName: 'Install Node.js'
    - script: yarn install
      displayName: 'Run yarn install'
    - script: gulp release --win32 --win64
      displayName: 'Run gulp release'
    - powershell: Set-Content -Path '$(System.DefaultWorkingDirectory)/release/log.txt' -Value $env:BUILD_SOURCEVERSIONMESSAGE

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Windows release'
      inputs: 
        artifactName: betaflight-configurator-windows
        targetPath: '$(System.DefaultWorkingDirectory)/release'

  - job: 'Linux'
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.16.3'    
      displayName: 'Install Node.js'
    - script: yarn install
      displayName: 'Run yarn install'
    - script: gulp release --linux32 --linux64
      displayName: 'run gulp release'


  - job: 'MacOS'
    pool:
      vmImage: 'macos-10.13'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.16.3'    
      displayName: 'Install Node.js'
    - script: npm install -g gulp
      displayName: 'Install Gulp'
    - script: yarn install
      displayName: 'Run yarn install'
    - script: gulp release --osx64
      displayName: 'Run gulp release'

    - task: PublishPipelineArtifact@0
      displayName: 'Publish MacOS release'
      inputs: 
        artifactName: betaflight-configurator-macos
        targetPath: '$(System.DefaultWorkingDirectory)/release'

- stage: Release
  jobs:
  - job: Release

    steps:
    #- task: GitHubRelease@1
    #  inputs:
    #    gitHubConnection: 'Frozenskys GitHub'
    #    repositoryName: '$(Build.Repository.Name)'
    #    action: 'create'
    #    target: '$(Build.SourceVersion)'
    #    tagSource: userSpecifiedTag
    #    tag: '$(Build.BuildNumber) '
    #    isPreRelease: true
    #    changeLogCompareToRelease: 'lastFullRelease'
    #    changeLogType: 'commitBased'
    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'Frozenskys GitHub'
        repositoryName: 'frozenskys/betaflight-configurator-nightly'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: userSpecifiedTag
        tag: '$(Build.BuildNumber) '
        releaseNotesSource: 'inline'
        releaseNotesInline: 'Nightly Release'
        isPreRelease: true
        addChangeLog: false